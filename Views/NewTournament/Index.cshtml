@using Twest2.Models

@model TournamentViewModel

@{
    ViewData["Title"] = "NewTournament";
}
<body>
    <div class="container">
        <span style="color:red">
            TODO:
            <br />
            - make _table.cshtml and use it for static count(8) tables, and different for group plays
        </span>
        <div class="row pt-2">
            <div class="col-6">
                <h2 class="text-primary">
                    Groups
                </h2>
            </div>
            <div class="col-6 text-end">
                <a class="btn btn-primary" asp-controller="NewTournament" asp-action="Create">
                    <i class="bi bi-plus-circle"></i> &nbsp; Create Tournament
                </a>
            </div>

            @{ ViewData["GroupName"] = "A";}
            <partial name="_TableGroupPartial" model="Model.groupsABC[0]" view-data="ViewData" />
            @{ ViewData["GroupName"] = "B";}
            <partial name="_TableGroupPartial" model="Model.groupsABC[1]" view-data="ViewData" />
            @{ ViewData["GroupName"] = "C";}
            <partial name="_TableGroupPartial" model="Model.groupsABC[2]" view-data="ViewData" />

        </div>
        <br />
        <br />
        <div class="row pt-3">
            @{ ViewData["GroupName"] = "A";}
            <partial name="_TableGroupPlaysPartial" model="Model.groupAPlays" view-data="ViewData" />
            @{ ViewData["GroupName"] = "B";}
            <partial name="_TableGroupPlaysPartial" model="Model.groupBPlays" view-data="ViewData" />
            @{ ViewData["GroupName"] = "C";}
            <partial name="_TableGroupPlaysPartial" model="Model.groupCPlays" view-data="ViewData" />
        </div>
</body>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}